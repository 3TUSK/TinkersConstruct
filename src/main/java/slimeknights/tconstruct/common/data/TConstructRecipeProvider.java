package slimeknights.tconstruct.common.data;

import net.minecraft.advancements.Advancement;
import net.minecraft.advancements.AdvancementRewards;
import net.minecraft.block.Blocks;
import net.minecraft.data.CookingRecipeBuilder;
import net.minecraft.data.DataGenerator;
import net.minecraft.data.IFinishedRecipe;
import net.minecraft.data.RecipeProvider;
import net.minecraft.data.ShapedRecipeBuilder;
import net.minecraft.data.ShapelessRecipeBuilder;
import net.minecraft.item.Items;
import net.minecraft.item.crafting.Ingredient;
import net.minecraft.util.ResourceLocation;
import net.minecraftforge.common.crafting.ConditionalAdvancement;
import net.minecraftforge.common.crafting.ConditionalRecipe;
import net.minecraftforge.common.crafting.conditions.ICondition;
import net.minecraftforge.common.crafting.conditions.IConditionBuilder;
import slimeknights.tconstruct.TConstruct;
import slimeknights.tconstruct.common.Tags;
import slimeknights.tconstruct.common.conditions.ConfigOptionEnabledCondition;
import slimeknights.tconstruct.common.conditions.PulseLoadedCondition;
import slimeknights.tconstruct.library.TinkerPulseIds;
import slimeknights.tconstruct.shared.TinkerCommons;

import java.util.function.Consumer;

public class TConstructRecipeProvider extends RecipeProvider implements IConditionBuilder {

  public TConstructRecipeProvider(DataGenerator generatorIn) {
    super(generatorIn);
  }

  @Override
  protected void registerRecipes(Consumer<IFinishedRecipe> consumer) {
    this.addCommon(consumer);

    if (TConstruct.pulseManager.isPulseLoaded(TinkerPulseIds.TINKER_WORLD_PULSE_ID)) {
      this.addWorld(consumer);
    }

    if (TConstruct.pulseManager.isPulseLoaded(TinkerPulseIds.TINKER_GADGETS_PULSE_ID)) {
      this.addGadgets(consumer);
    }
  }

  private void addCommon(Consumer<IFinishedRecipe> consumer) {
    ConditionalRecipe.builder().addCondition(this.TRUE()).addRecipe(ShapelessRecipeBuilder.shapelessRecipe(TinkerCommons.firewood).addIngredient(Items.BLAZE_POWDER).addIngredient(TinkerCommons.lavawood).addIngredient(Items.BLAZE_POWDER).setGroup("").addCriterion("has_lavawood", this.hasItem(TinkerCommons.lavawood))::build).setAdvancement(new ResourceLocation("tconstruct", "common/firewood/firewood"), ConditionalAdvancement.builder().addCondition(this.TRUE()).addAdvancement(Advancement.Builder.builder().withParentId(new ResourceLocation("minecraft", "recipes/root")).withRewards(AdvancementRewards.Builder.recipe(new ResourceLocation("tconstruct", "common/firewood/firewood"))).withCriterion("has_lavawood", this.hasItem(TinkerCommons.lavawood)))).build(consumer, new ResourceLocation("tconstruct", "common/firewood/firewood"));
    ConditionalRecipe.builder().addCondition(this.TRUE()).addRecipe(ShapedRecipeBuilder.shapedRecipe(TinkerCommons.firewood_slab, 6).patternLine("###").key('#', TinkerCommons.firewood).setGroup("").addCriterion("has_firewood", this.hasItem(TinkerCommons.firewood))::build).setAdvancement(new ResourceLocation("tconstruct", "common/firewood/firewood_slab"), ConditionalAdvancement.builder().addCondition(this.TRUE()).addAdvancement(Advancement.Builder.builder().withParentId(new ResourceLocation("minecraft", "recipes/root")).withRewards(AdvancementRewards.Builder.recipe(new ResourceLocation("tconstruct", "common/firewood/firewood_slab"))).withCriterion("has_firewood", this.hasItem(TinkerCommons.firewood)))).build(consumer, new ResourceLocation("tconstruct", "common/firewood/firewood_slab"));
    ConditionalRecipe.builder().addCondition(this.TRUE()).addRecipe(ShapedRecipeBuilder.shapedRecipe(TinkerCommons.firewood_stairs, 4).patternLine("#  ").patternLine("## ").patternLine("###").key('#', TinkerCommons.firewood).setGroup("").addCriterion("has_firewood", this.hasItem(TinkerCommons.firewood))::build).setAdvancement(new ResourceLocation("tconstruct", "common/firewood/firewood_stairs"), ConditionalAdvancement.builder().addCondition(this.TRUE()).addAdvancement(Advancement.Builder.builder().withParentId(new ResourceLocation("minecraft", "recipes/root")).withRewards(AdvancementRewards.Builder.recipe(new ResourceLocation("tconstruct", "common/firewood/firewood_stairs"))).withCriterion("has_firewood", this.hasItem(TinkerCommons.firewood)))).build(consumer, new ResourceLocation("tconstruct", "common/firewood/firewood_stairs"));
    ConditionalRecipe.builder().addCondition(this.TRUE()).addRecipe(ShapedRecipeBuilder.shapedRecipe(TinkerCommons.lavawood_slab, 6).patternLine("###").key('#', TinkerCommons.lavawood).setGroup("").addCriterion("has_lavawood", this.hasItem(TinkerCommons.lavawood))::build).setAdvancement(new ResourceLocation("tconstruct", "common/firewood/lavawood_slab"), ConditionalAdvancement.builder().addCondition(this.TRUE()).addAdvancement(Advancement.Builder.builder().withParentId(new ResourceLocation("minecraft", "recipes/root")).withRewards(AdvancementRewards.Builder.recipe(new ResourceLocation("tconstruct", "common/firewood/lavawood_slab"))).withCriterion("has_lavawood", this.hasItem(TinkerCommons.lavawood)))).build(consumer, new ResourceLocation("tconstruct", "common/firewood/lavawood_slab"));
    ConditionalRecipe.builder().addCondition(this.TRUE()).addRecipe(ShapedRecipeBuilder.shapedRecipe(TinkerCommons.lavawood_stairs, 4).patternLine("#  ").patternLine("## ").patternLine("###").key('#', TinkerCommons.lavawood).setGroup("").addCriterion("has_firewood", this.hasItem(TinkerCommons.firewood))::build).setAdvancement(new ResourceLocation("tconstruct", "common/firewood/lavawood_stairs"), ConditionalAdvancement.builder().addCondition(this.TRUE()).addAdvancement(Advancement.Builder.builder().withParentId(new ResourceLocation("minecraft", "recipes/root")).withRewards(AdvancementRewards.Builder.recipe(new ResourceLocation("tconstruct", "common/firewood/lavawood_stairs"))).withCriterion("has_firewood", this.hasItem(TinkerCommons.lavawood)))).build(consumer, new ResourceLocation("tconstruct", "common/firewood/lavawood_stairs"));

    ConditionalRecipe.builder().addCondition(this.TRUE()).addRecipe(ShapedRecipeBuilder.shapedRecipe(TinkerCommons.black_clear_stained_glass, 8).patternLine("###").patternLine("#X#").patternLine("###").key('#', TinkerCommons.clear_glass).key('X', net.minecraftforge.common.Tags.Items.DYES_BLACK).setGroup("tconstruct:stained_clear_glass").addCriterion("has_clear_glass", this.hasItem(TinkerCommons.clear_glass))::build).setAdvancement(new ResourceLocation("tconstruct", "common/glass/black_clear_stained_glass"), ConditionalAdvancement.builder().addCondition(this.TRUE()).addAdvancement(Advancement.Builder.builder().withParentId(new ResourceLocation("minecraft", "recipes/root")).withRewards(AdvancementRewards.Builder.recipe(new ResourceLocation("tconstruct", "common/glass/black_clear_stained_glass"))).withCriterion("has_clear_glass", this.hasItem(TinkerCommons.clear_glass)))).build(consumer, new ResourceLocation("tconstruct", "common/glass/black_clear_stained_glass"));
    ConditionalRecipe.builder().addCondition(this.TRUE()).addRecipe(ShapedRecipeBuilder.shapedRecipe(TinkerCommons.blue_clear_stained_glass, 8).patternLine("###").patternLine("#X#").patternLine("###").key('#', TinkerCommons.clear_glass).key('X', net.minecraftforge.common.Tags.Items.DYES_BLUE).setGroup("tconstruct:stained_clear_glass").addCriterion("has_clear_glass", this.hasItem(TinkerCommons.clear_glass))::build).setAdvancement(new ResourceLocation("tconstruct", "common/glass/blue_clear_stained_glass"), ConditionalAdvancement.builder().addCondition(this.TRUE()).addAdvancement(Advancement.Builder.builder().withParentId(new ResourceLocation("minecraft", "recipes/root")).withRewards(AdvancementRewards.Builder.recipe(new ResourceLocation("tconstruct", "common/glass/blue_clear_stained_glass"))).withCriterion("has_clear_glass", this.hasItem(TinkerCommons.clear_glass)))).build(consumer, new ResourceLocation("tconstruct", "common/glass/blue_clear_stained_glass"));
    ConditionalRecipe.builder().addCondition(this.TRUE()).addRecipe(ShapedRecipeBuilder.shapedRecipe(TinkerCommons.brown_clear_stained_glass, 8).patternLine("###").patternLine("#X#").patternLine("###").key('#', TinkerCommons.clear_glass).key('X', net.minecraftforge.common.Tags.Items.DYES_BROWN).setGroup("tconstruct:stained_clear_glass").addCriterion("has_clear_glass", this.hasItem(TinkerCommons.clear_glass))::build).setAdvancement(new ResourceLocation("tconstruct", "common/glass/brown_clear_stained_glass"), ConditionalAdvancement.builder().addCondition(this.TRUE()).addAdvancement(Advancement.Builder.builder().withParentId(new ResourceLocation("minecraft", "recipes/root")).withRewards(AdvancementRewards.Builder.recipe(new ResourceLocation("tconstruct", "common/glass/brown_clear_stained_glass"))).withCriterion("has_clear_glass", this.hasItem(TinkerCommons.clear_glass)))).build(consumer, new ResourceLocation("tconstruct", "common/glass/brown_clear_stained_glass"));
    ConditionalRecipe.builder().addCondition(this.TRUE()).addRecipe(ShapedRecipeBuilder.shapedRecipe(TinkerCommons.cyan_clear_stained_glass, 8).patternLine("###").patternLine("#X#").patternLine("###").key('#', TinkerCommons.clear_glass).key('X', net.minecraftforge.common.Tags.Items.DYES_CYAN).setGroup("tconstruct:stained_clear_glass").addCriterion("has_clear_glass", this.hasItem(TinkerCommons.clear_glass))::build).setAdvancement(new ResourceLocation("tconstruct", "common/glass/cyan_clear_stained_glass"), ConditionalAdvancement.builder().addCondition(this.TRUE()).addAdvancement(Advancement.Builder.builder().withParentId(new ResourceLocation("minecraft", "recipes/root")).withRewards(AdvancementRewards.Builder.recipe(new ResourceLocation("tconstruct", "common/glass/cyan_clear_stained_glass"))).withCriterion("has_clear_glass", this.hasItem(TinkerCommons.clear_glass)))).build(consumer, new ResourceLocation("tconstruct", "common/glass/cyan_clear_stained_glass"));
    ConditionalRecipe.builder().addCondition(this.TRUE()).addRecipe(ShapedRecipeBuilder.shapedRecipe(TinkerCommons.gray_clear_stained_glass, 8).patternLine("###").patternLine("#X#").patternLine("###").key('#', TinkerCommons.clear_glass).key('X', net.minecraftforge.common.Tags.Items.DYES_GRAY).setGroup("tconstruct:stained_clear_glass").addCriterion("has_clear_glass", this.hasItem(TinkerCommons.clear_glass))::build).setAdvancement(new ResourceLocation("tconstruct", "common/glass/gray_clear_stained_glass"), ConditionalAdvancement.builder().addCondition(this.TRUE()).addAdvancement(Advancement.Builder.builder().withParentId(new ResourceLocation("minecraft", "recipes/root")).withRewards(AdvancementRewards.Builder.recipe(new ResourceLocation("tconstruct", "common/glass/gray_clear_stained_glass"))).withCriterion("has_clear_glass", this.hasItem(TinkerCommons.clear_glass)))).build(consumer, new ResourceLocation("tconstruct", "common/glass/gray_clear_stained_glass"));
    ConditionalRecipe.builder().addCondition(this.TRUE()).addRecipe(ShapedRecipeBuilder.shapedRecipe(TinkerCommons.green_clear_stained_glass, 8).patternLine("###").patternLine("#X#").patternLine("###").key('#', TinkerCommons.clear_glass).key('X', net.minecraftforge.common.Tags.Items.DYES_GREEN).setGroup("tconstruct:stained_clear_glass").addCriterion("has_clear_glass", this.hasItem(TinkerCommons.clear_glass))::build).setAdvancement(new ResourceLocation("tconstruct", "common/glass/green_clear_stained_glass"), ConditionalAdvancement.builder().addCondition(this.TRUE()).addAdvancement(Advancement.Builder.builder().withParentId(new ResourceLocation("minecraft", "recipes/root")).withRewards(AdvancementRewards.Builder.recipe(new ResourceLocation("tconstruct", "common/glass/green_clear_stained_glass"))).withCriterion("has_clear_glass", this.hasItem(TinkerCommons.clear_glass)))).build(consumer, new ResourceLocation("tconstruct", "common/glass/green_clear_stained_glass"));
    ConditionalRecipe.builder().addCondition(this.TRUE()).addRecipe(ShapedRecipeBuilder.shapedRecipe(TinkerCommons.light_blue_clear_stained_glass, 8).patternLine("###").patternLine("#X#").patternLine("###").key('#', TinkerCommons.clear_glass).key('X', net.minecraftforge.common.Tags.Items.DYES_LIGHT_BLUE).setGroup("tconstruct:stained_clear_glass").addCriterion("has_clear_glass", this.hasItem(TinkerCommons.clear_glass))::build).setAdvancement(new ResourceLocation("tconstruct", "common/glass/light_blue_clear_stained_glass"), ConditionalAdvancement.builder().addCondition(this.TRUE()).addAdvancement(Advancement.Builder.builder().withParentId(new ResourceLocation("minecraft", "recipes/root")).withRewards(AdvancementRewards.Builder.recipe(new ResourceLocation("tconstruct", "common/glass/light_blue_clear_stained_glass"))).withCriterion("has_clear_glass", this.hasItem(TinkerCommons.clear_glass))))
            .build(consumer, new ResourceLocation("tconstruct", "common/glass/light_blue_clear_stained_glass"));
    ConditionalRecipe.builder().addCondition(this.TRUE()).addRecipe(ShapedRecipeBuilder.shapedRecipe(TinkerCommons.light_gray_clear_stained_glass, 8).patternLine("###").patternLine("#X#").patternLine("###").key('#', TinkerCommons.clear_glass).key('X', net.minecraftforge.common.Tags.Items.DYES_LIGHT_GRAY).setGroup("tconstruct:stained_clear_glass").addCriterion("has_clear_glass", this.hasItem(TinkerCommons.clear_glass))::build).setAdvancement(new ResourceLocation("tconstruct", "common/glass/light_gray_clear_stained_glass"), ConditionalAdvancement.builder().addCondition(this.TRUE()).addAdvancement(Advancement.Builder.builder().withParentId(new ResourceLocation("minecraft", "recipes/root")).withRewards(AdvancementRewards.Builder.recipe(new ResourceLocation("tconstruct", "common/glass/light_gray_clear_stained_glass"))).withCriterion("has_clear_glass", this.hasItem(TinkerCommons.clear_glass))))
            .build(consumer, new ResourceLocation("tconstruct", "common/glass/light_gray_clear_stained_glass"));
    ConditionalRecipe.builder().addCondition(this.TRUE()).addRecipe(ShapedRecipeBuilder.shapedRecipe(TinkerCommons.lime_clear_stained_glass, 8).patternLine("###").patternLine("#X#").patternLine("###").key('#', TinkerCommons.clear_glass).key('X', net.minecraftforge.common.Tags.Items.DYES_LIME).setGroup("tconstruct:stained_clear_glass").addCriterion("has_clear_glass", this.hasItem(TinkerCommons.clear_glass))::build).setAdvancement(new ResourceLocation("tconstruct", "common/glass/lime_clear_stained_glass"), ConditionalAdvancement.builder().addCondition(this.TRUE()).addAdvancement(Advancement.Builder.builder().withParentId(new ResourceLocation("minecraft", "recipes/root")).withRewards(AdvancementRewards.Builder.recipe(new ResourceLocation("tconstruct", "common/glass/lime_clear_stained_glass"))).withCriterion("has_clear_glass", this.hasItem(TinkerCommons.clear_glass)))).build(consumer, new ResourceLocation("tconstruct", "common/glass/lime_clear_stained_glass"));
    ConditionalRecipe.builder().addCondition(this.TRUE()).addRecipe(ShapedRecipeBuilder.shapedRecipe(TinkerCommons.magenta_clear_stained_glass, 8).patternLine("###").patternLine("#X#").patternLine("###").key('#', TinkerCommons.clear_glass).key('X', net.minecraftforge.common.Tags.Items.DYES_MAGENTA).setGroup("tconstruct:stained_clear_glass").addCriterion("has_clear_glass", this.hasItem(TinkerCommons.clear_glass))::build).setAdvancement(new ResourceLocation("tconstruct", "common/glass/magenta_clear_stained_glass"), ConditionalAdvancement.builder().addCondition(this.TRUE()).addAdvancement(Advancement.Builder.builder().withParentId(new ResourceLocation("minecraft", "recipes/root")).withRewards(AdvancementRewards.Builder.recipe(new ResourceLocation("tconstruct", "common/glass/magenta_clear_stained_glass"))).withCriterion("has_clear_glass", this.hasItem(TinkerCommons.clear_glass)))).build(consumer, new ResourceLocation("tconstruct", "common/glass/magenta_clear_stained_glass"));
    ConditionalRecipe.builder().addCondition(this.TRUE()).addRecipe(ShapedRecipeBuilder.shapedRecipe(TinkerCommons.orange_clear_stained_glass, 8).patternLine("###").patternLine("#X#").patternLine("###").key('#', TinkerCommons.clear_glass).key('X', net.minecraftforge.common.Tags.Items.DYES_ORANGE).setGroup("tconstruct:stained_clear_glass").addCriterion("has_clear_glass", this.hasItem(TinkerCommons.clear_glass))::build).setAdvancement(new ResourceLocation("tconstruct", "common/glass/orange_clear_stained_glass"), ConditionalAdvancement.builder().addCondition(this.TRUE()).addAdvancement(Advancement.Builder.builder().withParentId(new ResourceLocation("minecraft", "recipes/root")).withRewards(AdvancementRewards.Builder.recipe(new ResourceLocation("tconstruct", "common/glass/orange_clear_stained_glass"))).withCriterion("has_clear_glass", this.hasItem(TinkerCommons.clear_glass)))).build(consumer, new ResourceLocation("tconstruct", "common/glass/orange_clear_stained_glass"));
    ConditionalRecipe.builder().addCondition(this.TRUE()).addRecipe(ShapedRecipeBuilder.shapedRecipe(TinkerCommons.pink_clear_stained_glass, 8).patternLine("###").patternLine("#X#").patternLine("###").key('#', TinkerCommons.clear_glass).key('X', net.minecraftforge.common.Tags.Items.DYES_PINK).setGroup("tconstruct:stained_clear_glass").addCriterion("has_clear_glass", this.hasItem(TinkerCommons.clear_glass))::build).setAdvancement(new ResourceLocation("tconstruct", "common/glass/pink_clear_stained_glass"), ConditionalAdvancement.builder().addCondition(this.TRUE()).addAdvancement(Advancement.Builder.builder().withParentId(new ResourceLocation("minecraft", "recipes/root")).withRewards(AdvancementRewards.Builder.recipe(new ResourceLocation("tconstruct", "common/glass/pink_clear_stained_glass"))).withCriterion("has_clear_glass", this.hasItem(TinkerCommons.clear_glass)))).build(consumer, new ResourceLocation("tconstruct", "common/glass/pink_clear_stained_glass"));
    ConditionalRecipe.builder().addCondition(this.TRUE()).addRecipe(ShapedRecipeBuilder.shapedRecipe(TinkerCommons.purple_clear_stained_glass, 8).patternLine("###").patternLine("#X#").patternLine("###").key('#', TinkerCommons.clear_glass).key('X', net.minecraftforge.common.Tags.Items.DYES_PURPLE).setGroup("tconstruct:stained_clear_glass").addCriterion("has_clear_glass", this.hasItem(TinkerCommons.clear_glass))::build).setAdvancement(new ResourceLocation("tconstruct", "common/glass/purple_clear_stained_glass"), ConditionalAdvancement.builder().addCondition(this.TRUE()).addAdvancement(Advancement.Builder.builder().withParentId(new ResourceLocation("minecraft", "recipes/root")).withRewards(AdvancementRewards.Builder.recipe(new ResourceLocation("tconstruct", "common/glass/purple_clear_stained_glass"))).withCriterion("has_clear_glass", this.hasItem(TinkerCommons.clear_glass)))).build(consumer, new ResourceLocation("tconstruct", "common/glass/purple_clear_stained_glass"));
    ConditionalRecipe.builder().addCondition(this.TRUE()).addRecipe(ShapedRecipeBuilder.shapedRecipe(TinkerCommons.red_clear_stained_glass, 8).patternLine("###").patternLine("#X#").patternLine("###").key('#', TinkerCommons.clear_glass).key('X', net.minecraftforge.common.Tags.Items.DYES_RED).setGroup("tconstruct:stained_clear_glass").addCriterion("has_clear_glass", this.hasItem(TinkerCommons.clear_glass))::build).setAdvancement(new ResourceLocation("tconstruct", "common/glass/red_clear_stained_glass"), ConditionalAdvancement.builder().addCondition(this.TRUE()).addAdvancement(Advancement.Builder.builder().withParentId(new ResourceLocation("minecraft", "recipes/root")).withRewards(AdvancementRewards.Builder.recipe(new ResourceLocation("tconstruct", "common/glass/red_clear_stained_glass"))).withCriterion("has_clear_glass", this.hasItem(TinkerCommons.clear_glass)))).build(consumer, new ResourceLocation("tconstruct", "common/glass/red_clear_stained_glass"));
    ConditionalRecipe.builder().addCondition(this.TRUE()).addRecipe(ShapedRecipeBuilder.shapedRecipe(TinkerCommons.white_clear_stained_glass, 8).patternLine("###").patternLine("#X#").patternLine("###").key('#', TinkerCommons.clear_glass).key('X', net.minecraftforge.common.Tags.Items.DYES_WHITE).setGroup("tconstruct:stained_clear_glass").addCriterion("has_clear_glass", this.hasItem(TinkerCommons.clear_glass))::build).setAdvancement(new ResourceLocation("tconstruct", "common/glass/white_clear_stained_glass"), ConditionalAdvancement.builder().addCondition(this.TRUE()).addAdvancement(Advancement.Builder.builder().withParentId(new ResourceLocation("minecraft", "recipes/root")).withRewards(AdvancementRewards.Builder.recipe(new ResourceLocation("tconstruct", "common/glass/white_clear_stained_glass"))).withCriterion("has_clear_glass", this.hasItem(TinkerCommons.clear_glass)))).build(consumer, new ResourceLocation("tconstruct", "common/glass/white_clear_stained_glass"));
    ConditionalRecipe.builder().addCondition(this.TRUE()).addRecipe(ShapedRecipeBuilder.shapedRecipe(TinkerCommons.yellow_clear_stained_glass, 8).patternLine("###").patternLine("#X#").patternLine("###").key('#', TinkerCommons.clear_glass).key('X', net.minecraftforge.common.Tags.Items.DYES_YELLOW).setGroup("tconstruct:stained_clear_glass").addCriterion("has_clear_glass", this.hasItem(TinkerCommons.clear_glass))::build).setAdvancement(new ResourceLocation("tconstruct", "common/glass/yellow_clear_stained_glass"), ConditionalAdvancement.builder().addCondition(this.TRUE()).addAdvancement(Advancement.Builder.builder().withParentId(new ResourceLocation("minecraft", "recipes/root")).withRewards(AdvancementRewards.Builder.recipe(new ResourceLocation("tconstruct", "common/glass/yellow_clear_stained_glass"))).withCriterion("has_clear_glass", this.hasItem(TinkerCommons.clear_glass)))).build(consumer, new ResourceLocation("tconstruct", "common/glass/yellow_clear_stained_glass"));

    ConditionalRecipe.builder().addCondition(this.or(this.pulseLoaded(TinkerPulseIds.TINKER_TOOLS_PULSE_ID), this.pulseLoaded(TinkerPulseIds.TINKER_SMELTERY_PULSE_ID), this.configOptionEnabled("registerAllItems"))).addRecipe(ShapedRecipeBuilder.shapedRecipe(TinkerCommons.alubrass_block).patternLine("###").patternLine("###").patternLine("###").key('#', Tags.Items.INGOTS_ALUBRASS).setGroup("").addCriterion("has_aluminum_brass", this.hasItem(Tags.Items.INGOTS_ALUBRASS))::build)
            .setAdvancement(new ResourceLocation("tconstruct", "common/metals/alubrass/alubrass_block"), ConditionalAdvancement.builder().addCondition(this.or(this.pulseLoaded(TinkerPulseIds.TINKER_TOOLS_PULSE_ID), this.pulseLoaded(TinkerPulseIds.TINKER_SMELTERY_PULSE_ID), this.configOptionEnabled("registerAllItems"))).addAdvancement(Advancement.Builder.builder().withParentId(new ResourceLocation("minecraft", "recipes/root")).withRewards(AdvancementRewards.Builder.recipe(new ResourceLocation("tconstruct", "common/metals/alubrass/alubrass_block"))).withCriterion("has_aluminum_brass", this.hasItem(Tags.Items.INGOTS_ALUBRASS)))).build(consumer, new ResourceLocation("tconstruct", "common/metals/alubrass/alubrass_block"));
    ConditionalRecipe.builder().addCondition(this.or(this.pulseLoaded(TinkerPulseIds.TINKER_TOOLS_PULSE_ID), this.pulseLoaded(TinkerPulseIds.TINKER_SMELTERY_PULSE_ID), this.configOptionEnabled("registerAllItems"))).addRecipe(ShapelessRecipeBuilder.shapelessRecipe(TinkerCommons.alubrass_ingot, 9).addIngredient(Tags.Items.STORAGE_BLOCKS_ALUBRASS).setGroup("").addCriterion("has_aluminum_brass", this.hasItem(Tags.Items.INGOTS_ALUBRASS))::build)
            .setAdvancement(new ResourceLocation("tconstruct", "common/metals/alubrass/alubrass_ingot"), ConditionalAdvancement.builder().addCondition(this.or(this.pulseLoaded(TinkerPulseIds.TINKER_TOOLS_PULSE_ID), this.pulseLoaded(TinkerPulseIds.TINKER_SMELTERY_PULSE_ID), this.configOptionEnabled("registerAllItems"))).addAdvancement(Advancement.Builder.builder().withParentId(new ResourceLocation("minecraft", "recipes/root")).withRewards(AdvancementRewards.Builder.recipe(new ResourceLocation("tconstruct", "common/metals/alubrass/alubrass_ingot"))).withCriterion("has_aluminum_brass", this.hasItem(Tags.Items.INGOTS_ALUBRASS)))).build(consumer, new ResourceLocation("tconstruct", "common/metals/alubrass/alubrass_ingot"));
    ConditionalRecipe.builder().addCondition(this.or(this.pulseLoaded(TinkerPulseIds.TINKER_TOOLS_PULSE_ID), this.pulseLoaded(TinkerPulseIds.TINKER_SMELTERY_PULSE_ID), this.configOptionEnabled("registerAllItems"))).addRecipe(ShapedRecipeBuilder.shapedRecipe(TinkerCommons.alubrass_ingot).patternLine("###").patternLine("###").patternLine("###").key('#', Tags.Items.NUGGETS_ALUBRASS).setGroup("").addCriterion("has_aluminum_brass", this.hasItem(Tags.Items.INGOTS_ALUBRASS))::build)
            .setAdvancement(new ResourceLocation("tconstruct", "common/metals/alubrass/alubrass_ingot_nugget"), ConditionalAdvancement.builder().addCondition(this.or(this.pulseLoaded(TinkerPulseIds.TINKER_TOOLS_PULSE_ID), this.pulseLoaded(TinkerPulseIds.TINKER_SMELTERY_PULSE_ID), this.configOptionEnabled("registerAllItems"))).addAdvancement(Advancement.Builder.builder().withParentId(new ResourceLocation("minecraft", "recipes/root")).withRewards(AdvancementRewards.Builder.recipe(new ResourceLocation("tconstruct", "common/metals/alubrass/alubrass_ingot_nugget"))).withCriterion("has_aluminum_brass", this.hasItem(Tags.Items.INGOTS_ALUBRASS)))).build(consumer, new ResourceLocation("tconstruct", "common/metals/alubrass/alubrass_ingot_nugget"));
    ConditionalRecipe.builder().addCondition(this.or(this.pulseLoaded(TinkerPulseIds.TINKER_TOOLS_PULSE_ID), this.pulseLoaded(TinkerPulseIds.TINKER_SMELTERY_PULSE_ID), this.configOptionEnabled("registerAllItems"))).addRecipe(ShapelessRecipeBuilder.shapelessRecipe(TinkerCommons.alubrass_nugget, 9).addIngredient(Tags.Items.INGOTS_ALUBRASS).setGroup("").addCriterion("has_aluminum_brass", this.hasItem(Tags.Items.INGOTS_ALUBRASS))::build)
            .setAdvancement(new ResourceLocation("tconstruct", "common/metals/alubrass/alubrass_nuggest"), ConditionalAdvancement.builder().addCondition(this.or(this.pulseLoaded(TinkerPulseIds.TINKER_TOOLS_PULSE_ID), this.pulseLoaded(TinkerPulseIds.TINKER_SMELTERY_PULSE_ID), this.configOptionEnabled("registerAllItems"))).addAdvancement(Advancement.Builder.builder().withParentId(new ResourceLocation("minecraft", "recipes/root")).withRewards(AdvancementRewards.Builder.recipe(new ResourceLocation("tconstruct", "common/metals/alubrass/alubrass_nuggest"))).withCriterion("has_aluminum_brass", this.hasItem(Tags.Items.INGOTS_ALUBRASS)))).build(consumer, new ResourceLocation("tconstruct", "common/metals/alubrass/alubrass_nuggest"));

    ConditionalRecipe.builder().addCondition(this.or(this.pulseLoaded(TinkerPulseIds.TINKER_TOOLS_PULSE_ID), this.pulseLoaded(TinkerPulseIds.TINKER_SMELTERY_PULSE_ID), this.configOptionEnabled("registerAllItems"))).addRecipe(ShapedRecipeBuilder.shapedRecipe(TinkerCommons.ardite_block).patternLine("###").patternLine("###").patternLine("###").key('#', Tags.Items.INGOTS_ARDITE).setGroup("").addCriterion("has_aluminum_brass", this.hasItem(Tags.Items.INGOTS_ARDITE))::build)
            .setAdvancement(new ResourceLocation("tconstruct", "common/metals/ardite/ardite_block"), ConditionalAdvancement.builder().addCondition(this.or(this.pulseLoaded(TinkerPulseIds.TINKER_TOOLS_PULSE_ID), this.pulseLoaded(TinkerPulseIds.TINKER_SMELTERY_PULSE_ID), this.configOptionEnabled("registerAllItems"))).addAdvancement(Advancement.Builder.builder().withParentId(new ResourceLocation("minecraft", "recipes/root")).withRewards(AdvancementRewards.Builder.recipe(new ResourceLocation("tconstruct", "common/metals/ardite/ardite_block"))).withCriterion("has_aluminum_brass", this.hasItem(Tags.Items.INGOTS_ARDITE)))).build(consumer, new ResourceLocation("tconstruct", "common/metals/ardite/ardite_block"));
    ConditionalRecipe.builder().addCondition(this.or(this.pulseLoaded(TinkerPulseIds.TINKER_TOOLS_PULSE_ID), this.pulseLoaded(TinkerPulseIds.TINKER_SMELTERY_PULSE_ID), this.configOptionEnabled("registerAllItems"))).addRecipe(ShapelessRecipeBuilder.shapelessRecipe(TinkerCommons.ardite_ingot, 9).addIngredient(Tags.Items.STORAGE_BLOCKS_ARDITE).setGroup("").addCriterion("has_aluminum_brass", this.hasItem(Tags.Items.INGOTS_ARDITE))::build)
            .setAdvancement(new ResourceLocation("tconstruct", "common/metals/ardite/ardite_ingot"), ConditionalAdvancement.builder().addCondition(this.or(this.pulseLoaded(TinkerPulseIds.TINKER_TOOLS_PULSE_ID), this.pulseLoaded(TinkerPulseIds.TINKER_SMELTERY_PULSE_ID), this.configOptionEnabled("registerAllItems"))).addAdvancement(Advancement.Builder.builder().withParentId(new ResourceLocation("minecraft", "recipes/root")).withRewards(AdvancementRewards.Builder.recipe(new ResourceLocation("tconstruct", "common/metals/ardite/ardite_ingot"))).withCriterion("has_aluminum_brass", this.hasItem(Tags.Items.INGOTS_ARDITE)))).build(consumer, new ResourceLocation("tconstruct", "common/metals/ardite/ardite_ingot"));
    ConditionalRecipe.builder().addCondition(this.or(this.pulseLoaded(TinkerPulseIds.TINKER_TOOLS_PULSE_ID), this.pulseLoaded(TinkerPulseIds.TINKER_SMELTERY_PULSE_ID), this.configOptionEnabled("registerAllItems"))).addRecipe(ShapedRecipeBuilder.shapedRecipe(TinkerCommons.ardite_ingot).patternLine("###").patternLine("###").patternLine("###").key('#', Tags.Items.NUGGETS_ARDITE).setGroup("").addCriterion("has_aluminum_brass", this.hasItem(Tags.Items.INGOTS_ARDITE))::build)
            .setAdvancement(new ResourceLocation("tconstruct", "common/metals/ardite/ardite_ingot_nugget"), ConditionalAdvancement.builder().addCondition(this.or(this.pulseLoaded(TinkerPulseIds.TINKER_TOOLS_PULSE_ID), this.pulseLoaded(TinkerPulseIds.TINKER_SMELTERY_PULSE_ID), this.configOptionEnabled("registerAllItems"))).addAdvancement(Advancement.Builder.builder().withParentId(new ResourceLocation("minecraft", "recipes/root")).withRewards(AdvancementRewards.Builder.recipe(new ResourceLocation("tconstruct", "common/metals/ardite/ardite_ingot_nugget"))).withCriterion("has_aluminum_brass", this.hasItem(Tags.Items.INGOTS_ARDITE)))).build(consumer, new ResourceLocation("tconstruct", "common/metals/ardite/ardite_ingot_nugget"));
    ConditionalRecipe.builder().addCondition(this.or(this.pulseLoaded(TinkerPulseIds.TINKER_TOOLS_PULSE_ID), this.pulseLoaded(TinkerPulseIds.TINKER_SMELTERY_PULSE_ID), this.configOptionEnabled("registerAllItems"))).addRecipe(ShapelessRecipeBuilder.shapelessRecipe(TinkerCommons.ardite_nugget, 9).addIngredient(Tags.Items.INGOTS_ARDITE).setGroup("").addCriterion("has_aluminum_brass", this.hasItem(Tags.Items.INGOTS_ARDITE))::build)
            .setAdvancement(new ResourceLocation("tconstruct", "common/metals/ardite/ardite_nuggest"), ConditionalAdvancement.builder().addCondition(this.or(this.pulseLoaded(TinkerPulseIds.TINKER_TOOLS_PULSE_ID), this.pulseLoaded(TinkerPulseIds.TINKER_SMELTERY_PULSE_ID), this.configOptionEnabled("registerAllItems"))).addAdvancement(Advancement.Builder.builder().withParentId(new ResourceLocation("minecraft", "recipes/root")).withRewards(AdvancementRewards.Builder.recipe(new ResourceLocation("tconstruct", "common/metals/ardite/ardite_nuggest"))).withCriterion("has_aluminum_brass", this.hasItem(Tags.Items.INGOTS_ARDITE)))).build(consumer, new ResourceLocation("tconstruct", "common/metals/ardite/ardite_nuggest"));

    ConditionalRecipe.builder().addCondition(this.or(this.pulseLoaded(TinkerPulseIds.TINKER_TOOLS_PULSE_ID), this.pulseLoaded(TinkerPulseIds.TINKER_SMELTERY_PULSE_ID), this.configOptionEnabled("registerAllItems"))).addRecipe(ShapedRecipeBuilder.shapedRecipe(TinkerCommons.cobalt_block).patternLine("###").patternLine("###").patternLine("###").key('#', Tags.Items.INGOTS_COBALT).setGroup("").addCriterion("has_aluminum_brass", this.hasItem(Tags.Items.INGOTS_COBALT))::build)
            .setAdvancement(new ResourceLocation("tconstruct", "common/metals/cobalt/cobalt_block"), ConditionalAdvancement.builder().addCondition(this.or(this.pulseLoaded(TinkerPulseIds.TINKER_TOOLS_PULSE_ID), this.pulseLoaded(TinkerPulseIds.TINKER_SMELTERY_PULSE_ID), this.configOptionEnabled("registerAllItems"))).addAdvancement(Advancement.Builder.builder().withParentId(new ResourceLocation("minecraft", "recipes/root")).withRewards(AdvancementRewards.Builder.recipe(new ResourceLocation("tconstruct", "common/metals/cobalt/cobalt_block"))).withCriterion("has_aluminum_brass", this.hasItem(Tags.Items.INGOTS_COBALT)))).build(consumer, new ResourceLocation("tconstruct", "common/metals/cobalt/cobalt_block"));
    ConditionalRecipe.builder().addCondition(this.or(this.pulseLoaded(TinkerPulseIds.TINKER_TOOLS_PULSE_ID), this.pulseLoaded(TinkerPulseIds.TINKER_SMELTERY_PULSE_ID), this.configOptionEnabled("registerAllItems"))).addRecipe(ShapelessRecipeBuilder.shapelessRecipe(TinkerCommons.cobalt_ingot, 9).addIngredient(Tags.Items.STORAGE_BLOCKS_COBALT).setGroup("").addCriterion("has_aluminum_brass", this.hasItem(Tags.Items.INGOTS_COBALT))::build)
            .setAdvancement(new ResourceLocation("tconstruct", "common/metals/cobalt/cobalt_ingot"), ConditionalAdvancement.builder().addCondition(this.or(this.pulseLoaded(TinkerPulseIds.TINKER_TOOLS_PULSE_ID), this.pulseLoaded(TinkerPulseIds.TINKER_SMELTERY_PULSE_ID), this.configOptionEnabled("registerAllItems"))).addAdvancement(Advancement.Builder.builder().withParentId(new ResourceLocation("minecraft", "recipes/root")).withRewards(AdvancementRewards.Builder.recipe(new ResourceLocation("tconstruct", "common/metals/cobalt/cobalt_ingot"))).withCriterion("has_aluminum_brass", this.hasItem(Tags.Items.INGOTS_COBALT)))).build(consumer, new ResourceLocation("tconstruct", "common/metals/cobalt/cobalt_ingot"));
    ConditionalRecipe.builder().addCondition(this.or(this.pulseLoaded(TinkerPulseIds.TINKER_TOOLS_PULSE_ID), this.pulseLoaded(TinkerPulseIds.TINKER_SMELTERY_PULSE_ID), this.configOptionEnabled("registerAllItems"))).addRecipe(ShapedRecipeBuilder.shapedRecipe(TinkerCommons.cobalt_ingot).patternLine("###").patternLine("###").patternLine("###").key('#', Tags.Items.NUGGETS_COBALT).setGroup("").addCriterion("has_aluminum_brass", this.hasItem(Tags.Items.INGOTS_COBALT))::build)
            .setAdvancement(new ResourceLocation("tconstruct", "common/metals/cobalt/cobalt_ingot_nugget"), ConditionalAdvancement.builder().addCondition(this.or(this.pulseLoaded(TinkerPulseIds.TINKER_TOOLS_PULSE_ID), this.pulseLoaded(TinkerPulseIds.TINKER_SMELTERY_PULSE_ID), this.configOptionEnabled("registerAllItems"))).addAdvancement(Advancement.Builder.builder().withParentId(new ResourceLocation("minecraft", "recipes/root")).withRewards(AdvancementRewards.Builder.recipe(new ResourceLocation("tconstruct", "common/metals/cobalt/cobalt_ingot_nugget"))).withCriterion("has_aluminum_brass", this.hasItem(Tags.Items.INGOTS_COBALT)))).build(consumer, new ResourceLocation("tconstruct", "common/metals/cobalt/cobalt_ingot_nugget"));
    ConditionalRecipe.builder().addCondition(this.or(this.pulseLoaded(TinkerPulseIds.TINKER_TOOLS_PULSE_ID), this.pulseLoaded(TinkerPulseIds.TINKER_SMELTERY_PULSE_ID), this.configOptionEnabled("registerAllItems"))).addRecipe(ShapelessRecipeBuilder.shapelessRecipe(TinkerCommons.cobalt_nugget, 9).addIngredient(Tags.Items.INGOTS_COBALT).setGroup("").addCriterion("has_aluminum_brass", this.hasItem(Tags.Items.INGOTS_COBALT))::build)
            .setAdvancement(new ResourceLocation("tconstruct", "common/metals/cobalt/cobalt_nuggest"), ConditionalAdvancement.builder().addCondition(this.or(this.pulseLoaded(TinkerPulseIds.TINKER_TOOLS_PULSE_ID), this.pulseLoaded(TinkerPulseIds.TINKER_SMELTERY_PULSE_ID), this.configOptionEnabled("registerAllItems"))).addAdvancement(Advancement.Builder.builder().withParentId(new ResourceLocation("minecraft", "recipes/root")).withRewards(AdvancementRewards.Builder.recipe(new ResourceLocation("tconstruct", "common/metals/cobalt/cobalt_nuggest"))).withCriterion("has_aluminum_brass", this.hasItem(Tags.Items.INGOTS_COBALT)))).build(consumer, new ResourceLocation("tconstruct", "common/metals/cobalt/cobalt_nuggest"));

    ConditionalRecipe.builder().addCondition(this.or(this.pulseLoaded(TinkerPulseIds.TINKER_TOOLS_PULSE_ID), this.pulseLoaded(TinkerPulseIds.TINKER_SMELTERY_PULSE_ID), this.configOptionEnabled("registerAllItems"))).addRecipe(ShapedRecipeBuilder.shapedRecipe(TinkerCommons.knightslime_block).patternLine("###").patternLine("###").patternLine("###").key('#', Tags.Items.INGOTS_KNIGHTSLIME).setGroup("").addCriterion("has_aluminum_brass", this.hasItem(Tags.Items.INGOTS_KNIGHTSLIME))::build)
            .setAdvancement(new ResourceLocation("tconstruct", "common/metals/knightslime/knightslime_block"), ConditionalAdvancement.builder().addCondition(this.or(this.pulseLoaded(TinkerPulseIds.TINKER_TOOLS_PULSE_ID), this.pulseLoaded(TinkerPulseIds.TINKER_SMELTERY_PULSE_ID), this.configOptionEnabled("registerAllItems"))).addAdvancement(Advancement.Builder.builder().withParentId(new ResourceLocation("minecraft", "recipes/root")).withRewards(AdvancementRewards.Builder.recipe(new ResourceLocation("tconstruct", "common/metals/knightslime/knightslime_block"))).withCriterion("has_aluminum_brass", this.hasItem(Tags.Items.INGOTS_KNIGHTSLIME)))).build(consumer, new ResourceLocation("tconstruct", "common/metals/knightslime/knightslime_block"));
    ConditionalRecipe.builder().addCondition(this.or(this.pulseLoaded(TinkerPulseIds.TINKER_TOOLS_PULSE_ID), this.pulseLoaded(TinkerPulseIds.TINKER_SMELTERY_PULSE_ID), this.configOptionEnabled("registerAllItems"))).addRecipe(ShapelessRecipeBuilder.shapelessRecipe(TinkerCommons.knightslime_ingot, 9).addIngredient(Tags.Items.STORAGE_BLOCKS_KNIGHTSLIME).setGroup("").addCriterion("has_aluminum_brass", this.hasItem(Tags.Items.INGOTS_KNIGHTSLIME))::build)
            .setAdvancement(new ResourceLocation("tconstruct", "common/metals/knightslime/knightslime_ingot"), ConditionalAdvancement.builder().addCondition(this.or(this.pulseLoaded(TinkerPulseIds.TINKER_TOOLS_PULSE_ID), this.pulseLoaded(TinkerPulseIds.TINKER_SMELTERY_PULSE_ID), this.configOptionEnabled("registerAllItems"))).addAdvancement(Advancement.Builder.builder().withParentId(new ResourceLocation("minecraft", "recipes/root")).withRewards(AdvancementRewards.Builder.recipe(new ResourceLocation("tconstruct", "common/metals/knightslime/knightslime_ingot"))).withCriterion("has_aluminum_brass", this.hasItem(Tags.Items.INGOTS_KNIGHTSLIME)))).build(consumer, new ResourceLocation("tconstruct", "common/metals/knightslime/knightslime_ingot"));
    ConditionalRecipe.builder().addCondition(this.or(this.pulseLoaded(TinkerPulseIds.TINKER_TOOLS_PULSE_ID), this.pulseLoaded(TinkerPulseIds.TINKER_SMELTERY_PULSE_ID), this.configOptionEnabled("registerAllItems"))).addRecipe(ShapedRecipeBuilder.shapedRecipe(TinkerCommons.knightslime_ingot).patternLine("###").patternLine("###").patternLine("###").key('#', Tags.Items.NUGGETS_KNIGHTSLIME).setGroup("").addCriterion("has_aluminum_brass", this.hasItem(Tags.Items.INGOTS_KNIGHTSLIME))::build)
            .setAdvancement(new ResourceLocation("tconstruct", "common/metals/knightslime/knightslime_ingot_nugget"), ConditionalAdvancement.builder().addCondition(this.or(this.pulseLoaded(TinkerPulseIds.TINKER_TOOLS_PULSE_ID), this.pulseLoaded(TinkerPulseIds.TINKER_SMELTERY_PULSE_ID), this.configOptionEnabled("registerAllItems"))).addAdvancement(Advancement.Builder.builder().withParentId(new ResourceLocation("minecraft", "recipes/root")).withRewards(AdvancementRewards.Builder.recipe(new ResourceLocation("tconstruct", "common/metals/knightslime/knightslime_ingot_nugget"))).withCriterion("has_aluminum_brass", this.hasItem(Tags.Items.INGOTS_KNIGHTSLIME)))).build(consumer, new ResourceLocation("tconstruct", "common/metals/knightslime/knightslime_ingot_nugget"));
    ConditionalRecipe.builder().addCondition(this.or(this.pulseLoaded(TinkerPulseIds.TINKER_TOOLS_PULSE_ID), this.pulseLoaded(TinkerPulseIds.TINKER_SMELTERY_PULSE_ID), this.configOptionEnabled("registerAllItems"))).addRecipe(ShapelessRecipeBuilder.shapelessRecipe(TinkerCommons.knightslime_nugget, 9).addIngredient(Tags.Items.INGOTS_KNIGHTSLIME).setGroup("").addCriterion("has_aluminum_brass", this.hasItem(Tags.Items.INGOTS_KNIGHTSLIME))::build)
            .setAdvancement(new ResourceLocation("tconstruct", "common/metals/knightslime/knightslime_nuggest"), ConditionalAdvancement.builder().addCondition(this.or(this.pulseLoaded(TinkerPulseIds.TINKER_TOOLS_PULSE_ID), this.pulseLoaded(TinkerPulseIds.TINKER_SMELTERY_PULSE_ID), this.configOptionEnabled("registerAllItems"))).addAdvancement(Advancement.Builder.builder().withParentId(new ResourceLocation("minecraft", "recipes/root")).withRewards(AdvancementRewards.Builder.recipe(new ResourceLocation("tconstruct", "common/metals/knightslime/knightslime_nuggest"))).withCriterion("has_aluminum_brass", this.hasItem(Tags.Items.INGOTS_KNIGHTSLIME)))).build(consumer, new ResourceLocation("tconstruct", "common/metals/knightslime/knightslime_nuggest"));

    ConditionalRecipe.builder().addCondition(this.or(this.pulseLoaded(TinkerPulseIds.TINKER_TOOLS_PULSE_ID), this.pulseLoaded(TinkerPulseIds.TINKER_SMELTERY_PULSE_ID), this.configOptionEnabled("registerAllItems"))).addRecipe(ShapedRecipeBuilder.shapedRecipe(TinkerCommons.manyullyn_block).patternLine("###").patternLine("###").patternLine("###").key('#', Tags.Items.INGOTS_MANYULLYN).setGroup("").addCriterion("has_aluminum_brass", this.hasItem(Tags.Items.INGOTS_MANYULLYN))::build)
            .setAdvancement(new ResourceLocation("tconstruct", "common/metals/manyullyn/manyullyn_block"), ConditionalAdvancement.builder().addCondition(this.or(this.pulseLoaded(TinkerPulseIds.TINKER_TOOLS_PULSE_ID), this.pulseLoaded(TinkerPulseIds.TINKER_SMELTERY_PULSE_ID), this.configOptionEnabled("registerAllItems"))).addAdvancement(Advancement.Builder.builder().withParentId(new ResourceLocation("minecraft", "recipes/root")).withRewards(AdvancementRewards.Builder.recipe(new ResourceLocation("tconstruct", "common/metals/manyullyn/manyullyn_block"))).withCriterion("has_aluminum_brass", this.hasItem(Tags.Items.INGOTS_MANYULLYN)))).build(consumer, new ResourceLocation("tconstruct", "common/metals/manyullyn/manyullyn_block"));
    ConditionalRecipe.builder().addCondition(this.or(this.pulseLoaded(TinkerPulseIds.TINKER_TOOLS_PULSE_ID), this.pulseLoaded(TinkerPulseIds.TINKER_SMELTERY_PULSE_ID), this.configOptionEnabled("registerAllItems"))).addRecipe(ShapelessRecipeBuilder.shapelessRecipe(TinkerCommons.manyullyn_ingot, 9).addIngredient(Tags.Items.STORAGE_BLOCKS_MANYULLYN).setGroup("").addCriterion("has_aluminum_brass", this.hasItem(Tags.Items.INGOTS_MANYULLYN))::build)
            .setAdvancement(new ResourceLocation("tconstruct", "common/metals/manyullyn/manyullyn_ingot"), ConditionalAdvancement.builder().addCondition(this.or(this.pulseLoaded(TinkerPulseIds.TINKER_TOOLS_PULSE_ID), this.pulseLoaded(TinkerPulseIds.TINKER_SMELTERY_PULSE_ID), this.configOptionEnabled("registerAllItems"))).addAdvancement(Advancement.Builder.builder().withParentId(new ResourceLocation("minecraft", "recipes/root")).withRewards(AdvancementRewards.Builder.recipe(new ResourceLocation("tconstruct", "common/metals/manyullyn/manyullyn_ingot"))).withCriterion("has_aluminum_brass", this.hasItem(Tags.Items.INGOTS_MANYULLYN)))).build(consumer, new ResourceLocation("tconstruct", "common/metals/manyullyn/manyullyn_ingot"));
    ConditionalRecipe.builder().addCondition(this.or(this.pulseLoaded(TinkerPulseIds.TINKER_TOOLS_PULSE_ID), this.pulseLoaded(TinkerPulseIds.TINKER_SMELTERY_PULSE_ID), this.configOptionEnabled("registerAllItems"))).addRecipe(ShapedRecipeBuilder.shapedRecipe(TinkerCommons.manyullyn_ingot).patternLine("###").patternLine("###").patternLine("###").key('#', Tags.Items.NUGGETS_MANYULLYN).setGroup("").addCriterion("has_aluminum_brass", this.hasItem(Tags.Items.INGOTS_MANYULLYN))::build)
            .setAdvancement(new ResourceLocation("tconstruct", "common/metals/manyullyn/manyullyn_ingot_nugget"), ConditionalAdvancement.builder().addCondition(this.or(this.pulseLoaded(TinkerPulseIds.TINKER_TOOLS_PULSE_ID), this.pulseLoaded(TinkerPulseIds.TINKER_SMELTERY_PULSE_ID), this.configOptionEnabled("registerAllItems"))).addAdvancement(Advancement.Builder.builder().withParentId(new ResourceLocation("minecraft", "recipes/root")).withRewards(AdvancementRewards.Builder.recipe(new ResourceLocation("tconstruct", "common/metals/manyullyn/manyullyn_ingot_nugget"))).withCriterion("has_aluminum_brass", this.hasItem(Tags.Items.INGOTS_MANYULLYN)))).build(consumer, new ResourceLocation("tconstruct", "common/metals/manyullyn/manyullyn_ingot_nugget"));
    ConditionalRecipe.builder().addCondition(this.or(this.pulseLoaded(TinkerPulseIds.TINKER_TOOLS_PULSE_ID), this.pulseLoaded(TinkerPulseIds.TINKER_SMELTERY_PULSE_ID), this.configOptionEnabled("registerAllItems"))).addRecipe(ShapelessRecipeBuilder.shapelessRecipe(TinkerCommons.manyullyn_nugget, 9).addIngredient(Tags.Items.INGOTS_MANYULLYN).setGroup("").addCriterion("has_aluminum_brass", this.hasItem(Tags.Items.INGOTS_MANYULLYN))::build)
            .setAdvancement(new ResourceLocation("tconstruct", "common/metals/manyullyn/manyullyn_nuggest"), ConditionalAdvancement.builder().addCondition(this.or(this.pulseLoaded(TinkerPulseIds.TINKER_TOOLS_PULSE_ID), this.pulseLoaded(TinkerPulseIds.TINKER_SMELTERY_PULSE_ID), this.configOptionEnabled("registerAllItems"))).addAdvancement(Advancement.Builder.builder().withParentId(new ResourceLocation("minecraft", "recipes/root")).withRewards(AdvancementRewards.Builder.recipe(new ResourceLocation("tconstruct", "common/metals/manyullyn/manyullyn_nuggest"))).withCriterion("has_aluminum_brass", this.hasItem(Tags.Items.INGOTS_MANYULLYN)))).build(consumer, new ResourceLocation("tconstruct", "common/metals/manyullyn/manyullyn_nuggest"));

    ConditionalRecipe.builder().addCondition(this.or(this.pulseLoaded(TinkerPulseIds.TINKER_TOOLS_PULSE_ID), this.pulseLoaded(TinkerPulseIds.TINKER_SMELTERY_PULSE_ID), this.configOptionEnabled("registerAllItems"))).addRecipe(ShapedRecipeBuilder.shapedRecipe(TinkerCommons.pigiron_block).patternLine("###").patternLine("###").patternLine("###").key('#', Tags.Items.INGOTS_PIGIRON).setGroup("").addCriterion("has_aluminum_brass", this.hasItem(Tags.Items.INGOTS_PIGIRON))::build)
            .setAdvancement(new ResourceLocation("tconstruct", "common/metals/pigiron/pigiron_block"), ConditionalAdvancement.builder().addCondition(this.or(this.pulseLoaded(TinkerPulseIds.TINKER_TOOLS_PULSE_ID), this.pulseLoaded(TinkerPulseIds.TINKER_SMELTERY_PULSE_ID), this.configOptionEnabled("registerAllItems"))).addAdvancement(Advancement.Builder.builder().withParentId(new ResourceLocation("minecraft", "recipes/root")).withRewards(AdvancementRewards.Builder.recipe(new ResourceLocation("tconstruct", "common/metals/pigiron/pigiron_block"))).withCriterion("has_aluminum_brass", this.hasItem(Tags.Items.INGOTS_PIGIRON)))).build(consumer, new ResourceLocation("tconstruct", "common/metals/pigiron/pigiron_block"));
    ConditionalRecipe.builder().addCondition(this.or(this.pulseLoaded(TinkerPulseIds.TINKER_TOOLS_PULSE_ID), this.pulseLoaded(TinkerPulseIds.TINKER_SMELTERY_PULSE_ID), this.configOptionEnabled("registerAllItems"))).addRecipe(ShapelessRecipeBuilder.shapelessRecipe(TinkerCommons.pigiron_ingot, 9).addIngredient(Tags.Items.STORAGE_BLOCKS_PIGIRON).setGroup("").addCriterion("has_aluminum_brass", this.hasItem(Tags.Items.INGOTS_PIGIRON))::build)
            .setAdvancement(new ResourceLocation("tconstruct", "common/metals/pigiron/pigiron_ingot"), ConditionalAdvancement.builder().addCondition(this.or(this.pulseLoaded(TinkerPulseIds.TINKER_TOOLS_PULSE_ID), this.pulseLoaded(TinkerPulseIds.TINKER_SMELTERY_PULSE_ID), this.configOptionEnabled("registerAllItems"))).addAdvancement(Advancement.Builder.builder().withParentId(new ResourceLocation("minecraft", "recipes/root")).withRewards(AdvancementRewards.Builder.recipe(new ResourceLocation("tconstruct", "common/metals/pigiron/pigiron_ingot"))).withCriterion("has_aluminum_brass", this.hasItem(Tags.Items.INGOTS_PIGIRON)))).build(consumer, new ResourceLocation("tconstruct", "common/metals/pigiron/pigiron_ingot"));
    ConditionalRecipe.builder().addCondition(this.or(this.pulseLoaded(TinkerPulseIds.TINKER_TOOLS_PULSE_ID), this.pulseLoaded(TinkerPulseIds.TINKER_SMELTERY_PULSE_ID), this.configOptionEnabled("registerAllItems"))).addRecipe(ShapedRecipeBuilder.shapedRecipe(TinkerCommons.pigiron_ingot).patternLine("###").patternLine("###").patternLine("###").key('#', Tags.Items.NUGGETS_PIGIRON).setGroup("").addCriterion("has_aluminum_brass", this.hasItem(Tags.Items.INGOTS_PIGIRON))::build)
            .setAdvancement(new ResourceLocation("tconstruct", "common/metals/pigiron/pigiron_ingot_nugget"), ConditionalAdvancement.builder().addCondition(this.or(this.pulseLoaded(TinkerPulseIds.TINKER_TOOLS_PULSE_ID), this.pulseLoaded(TinkerPulseIds.TINKER_SMELTERY_PULSE_ID), this.configOptionEnabled("registerAllItems"))).addAdvancement(Advancement.Builder.builder().withParentId(new ResourceLocation("minecraft", "recipes/root")).withRewards(AdvancementRewards.Builder.recipe(new ResourceLocation("tconstruct", "common/metals/pigiron/pigiron_ingot_nugget"))).withCriterion("has_aluminum_brass", this.hasItem(Tags.Items.INGOTS_PIGIRON)))).build(consumer, new ResourceLocation("tconstruct", "common/metals/pigiron/pigiron_ingot_nugget"));
    ConditionalRecipe.builder().addCondition(this.or(this.pulseLoaded(TinkerPulseIds.TINKER_TOOLS_PULSE_ID), this.pulseLoaded(TinkerPulseIds.TINKER_SMELTERY_PULSE_ID), this.configOptionEnabled("registerAllItems"))).addRecipe(ShapelessRecipeBuilder.shapelessRecipe(TinkerCommons.pigiron_nugget, 9).addIngredient(Tags.Items.INGOTS_PIGIRON).setGroup("").addCriterion("has_aluminum_brass", this.hasItem(Tags.Items.INGOTS_PIGIRON))::build)
            .setAdvancement(new ResourceLocation("tconstruct", "common/metals/pigiron/pigiron_nuggest"), ConditionalAdvancement.builder().addCondition(this.or(this.pulseLoaded(TinkerPulseIds.TINKER_TOOLS_PULSE_ID), this.pulseLoaded(TinkerPulseIds.TINKER_SMELTERY_PULSE_ID), this.configOptionEnabled("registerAllItems"))).addAdvancement(Advancement.Builder.builder().withParentId(new ResourceLocation("minecraft", "recipes/root")).withRewards(AdvancementRewards.Builder.recipe(new ResourceLocation("tconstruct", "common/metals/pigiron/pigiron_nuggest"))).withCriterion("has_aluminum_brass", this.hasItem(Tags.Items.INGOTS_PIGIRON)))).build(consumer, new ResourceLocation("tconstruct", "common/metals/pigiron/pigiron_nuggest"));

    ConditionalRecipe.builder().addCondition(this.or(this.pulseLoaded(TinkerPulseIds.TINKER_TOOLS_PULSE_ID), this.pulseLoaded(TinkerPulseIds.TINKER_SMELTERY_PULSE_ID), this.configOptionEnabled("registerAllItems"))).addRecipe(ShapedRecipeBuilder.shapedRecipe(TinkerCommons.silky_jewel_block).patternLine("###").patternLine("###").patternLine("###").key('#', TinkerCommons.silky_jewel).setGroup("").addCriterion("has_silky_jewel", this.hasItem(TinkerCommons.silky_jewel))::build)
            .setAdvancement(new ResourceLocation("tconstruct", "common/metals/silkyjewel/silky_jewel_block"), ConditionalAdvancement.builder().addCondition(this.or(this.pulseLoaded(TinkerPulseIds.TINKER_TOOLS_PULSE_ID), this.pulseLoaded(TinkerPulseIds.TINKER_SMELTERY_PULSE_ID), this.configOptionEnabled("registerAllItems"))).addAdvancement(Advancement.Builder.builder().withParentId(new ResourceLocation("minecraft", "recipes/root")).withRewards(AdvancementRewards.Builder.recipe(new ResourceLocation("tconstruct", "common/metals/silkyjewel/silky_jewel_block"))).withCriterion("has_silky_jewel", this.hasItem(TinkerCommons.silky_jewel)))).build(consumer, new ResourceLocation("tconstruct", "common/metals/silkyjewel/silky_jewel_block"));
    ConditionalRecipe.builder().addCondition(this.or(this.pulseLoaded(TinkerPulseIds.TINKER_TOOLS_PULSE_ID), this.pulseLoaded(TinkerPulseIds.TINKER_SMELTERY_PULSE_ID), this.configOptionEnabled("registerAllItems"))).addRecipe(ShapelessRecipeBuilder.shapelessRecipe(TinkerCommons.silky_jewel, 9).addIngredient(TinkerCommons.silky_jewel_block).setGroup("").addCriterion("has_silky_jewel", this.hasItem(TinkerCommons.silky_jewel))::build)
            .setAdvancement(new ResourceLocation("tconstruct", "common/metals/silkyjewel/silky_jewel"), ConditionalAdvancement.builder().addCondition(this.or(this.pulseLoaded(TinkerPulseIds.TINKER_TOOLS_PULSE_ID), this.pulseLoaded(TinkerPulseIds.TINKER_SMELTERY_PULSE_ID), this.configOptionEnabled("registerAllItems"))).addAdvancement(Advancement.Builder.builder().withParentId(new ResourceLocation("minecraft", "recipes/root")).withRewards(AdvancementRewards.Builder.recipe(new ResourceLocation("tconstruct", "common/metals/silkyjewel/silky_jewel"))).withCriterion("has_silky_jewel", this.hasItem(TinkerCommons.silky_jewel)))).build(consumer, new ResourceLocation("tconstruct", "common/metals/silkyjewel/silky_jewel"));

    ConditionalRecipe.builder().addCondition(this.pulseLoaded(TinkerPulseIds.TINKER_TOOLS_PULSE_ID)).addRecipe(ShapelessRecipeBuilder.shapelessRecipe(TinkerCommons.graveyard_soil).addIngredient(Blocks.DIRT).addIngredient(Items.ROTTEN_FLESH).addIngredient(Items.BONE_MEAL).setGroup("").addCriterion("has_rotten_flesh", this.hasItem(Items.ROTTEN_FLESH)).addCriterion("has_bone_meal", this.hasItem(Items.BONE_MEAL))::build).setAdvancement(new ResourceLocation("tconstruct", "common/soil/graveyard_soil"), ConditionalAdvancement.builder().addCondition(this.pulseLoaded(TinkerPulseIds.TINKER_TOOLS_PULSE_ID)).addAdvancement(Advancement.Builder.builder().withParentId(new ResourceLocation("minecraft", "recipes/root")).withRewards(AdvancementRewards.Builder.recipe(new ResourceLocation("tconstruct", "common/soil/graveyard_soil"))).withCriterion("has_rotten_flesh", this.hasItem(Items.ROTTEN_FLESH)).withCriterion("has_bone_meal", this.hasItem(Items.BONE_MEAL))))
            .build(consumer, new ResourceLocation("tconstruct", "common/soil/graveyard_soil"));
    ConditionalRecipe.builder().addCondition(this.or(this.pulseLoaded(TinkerPulseIds.TINKER_SMELTERY_PULSE_ID), this.configOptionEnabled("registerAllItems"))).addRecipe(ShapedRecipeBuilder.shapedRecipe(TinkerCommons.mud_bricks).patternLine("##").patternLine("##").key('#', TinkerCommons.mud_brick).setGroup("").addCriterion("has_mud_brick", this.hasItem(TinkerCommons.mud_brick))::build).setAdvancement(new ResourceLocation("tconstruct", "common/soil/mud_bricks_block"), ConditionalAdvancement.builder().addCondition(this.or(this.pulseLoaded(TinkerPulseIds.TINKER_SMELTERY_PULSE_ID), this.configOptionEnabled("registerAllItems"))).addAdvancement(Advancement.Builder.builder().withParentId(new ResourceLocation("minecraft", "recipes/root")).withRewards(AdvancementRewards.Builder.recipe(new ResourceLocation("tconstruct", "common/soil/mud_bricks_block"))).withCriterion("has_mud_brick", this.hasItem(TinkerCommons.mud_brick))))
            .build(consumer, new ResourceLocation("tconstruct", "common/soil/mud_bricks_block"));
    ConditionalRecipe.builder().addCondition(this.or(this.pulseLoaded(TinkerPulseIds.TINKER_SMELTERY_PULSE_ID), this.configOptionEnabled("registerAllItems"))).addRecipe(ShapedRecipeBuilder.shapedRecipe(TinkerCommons.mud_bricks_slab, 6).patternLine("###").key('#', TinkerCommons.mud_brick).setGroup("tconstruct:mud_brick_slab").addCriterion("has_mud_bricks", this.hasItem(TinkerCommons.mud_bricks))::build).setAdvancement(new ResourceLocation("tconstruct", "common/soil/mud_bricks_slab_block"), ConditionalAdvancement.builder().addCondition(this.or(this.pulseLoaded(TinkerPulseIds.TINKER_SMELTERY_PULSE_ID), this.configOptionEnabled("registerAllItems"))).addAdvancement(Advancement.Builder.builder().withParentId(new ResourceLocation("minecraft", "recipes/root")).withRewards(AdvancementRewards.Builder.recipe(new ResourceLocation("tconstruct", "common/soil/mud_bricks_slab_block"))).withCriterion("has_mud_bricks", this.hasItem(TinkerCommons.mud_bricks))))
            .build(consumer, new ResourceLocation("tconstruct", "common/soil/mud_bricks_slab_block"));
    ConditionalRecipe.builder().addCondition(this.or(this.pulseLoaded(TinkerPulseIds.TINKER_SMELTERY_PULSE_ID), this.configOptionEnabled("registerAllItems"))).addRecipe(ShapedRecipeBuilder.shapedRecipe(TinkerCommons.mud_bricks_slab).patternLine("##").key('#', TinkerCommons.mud_brick).setGroup("tconstruct:mud_brick_slab").addCriterion("has_mud_brick", this.hasItem(TinkerCommons.mud_brick))::build).setAdvancement(new ResourceLocation("tconstruct", "common/soil/mud_bricks_slab"), ConditionalAdvancement.builder().addCondition(this.or(this.pulseLoaded(TinkerPulseIds.TINKER_SMELTERY_PULSE_ID), this.configOptionEnabled("registerAllItems"))).addAdvancement(Advancement.Builder.builder().withParentId(new ResourceLocation("minecraft", "recipes/root")).withRewards(AdvancementRewards.Builder.recipe(new ResourceLocation("tconstruct", "common/soil/mud_bricks_slab"))).withCriterion("has_mud_bricks", this.hasItem(TinkerCommons.mud_bricks))))
            .build(consumer, new ResourceLocation("tconstruct", "common/soil/mud_bricks_slab"));
    ConditionalRecipe.builder().addCondition(this.or(this.pulseLoaded(TinkerPulseIds.TINKER_SMELTERY_PULSE_ID), this.configOptionEnabled("registerAllItems"))).addRecipe(ShapedRecipeBuilder.shapedRecipe(TinkerCommons.mud_bricks_stairs, 4).patternLine("#  ").patternLine("## ").patternLine("###").key('#', TinkerCommons.mud_bricks).setGroup("").addCriterion("has_mud_bricks", this.hasItem(TinkerCommons.mud_bricks))::build).setAdvancement(new ResourceLocation("tconstruct", "common/soil/mud_bricks_stairs"), ConditionalAdvancement.builder().addCondition(this.or(this.pulseLoaded(TinkerPulseIds.TINKER_SMELTERY_PULSE_ID), this.configOptionEnabled("registerAllItems"))).addAdvancement(Advancement.Builder.builder().withParentId(new ResourceLocation("minecraft", "recipes/root")).withRewards(AdvancementRewards.Builder.recipe(new ResourceLocation("tconstruct", "common/soil/mud_bricks_stairs"))).withCriterion("has_mud_bricks", this.hasItem(TinkerCommons.mud_bricks))))
            .build(consumer, new ResourceLocation("tconstruct", "common/soil/mud_bricks_stairs"));

    ConditionalRecipe.builder().addCondition(this.TRUE()).addRecipe(ShapedRecipeBuilder.shapedRecipe(TinkerCommons.congealed_blood_slime).patternLine("##").patternLine("##").key('#', Tags.Items.BLOOD_SLIMEBALL).setGroup("tconstruct:congealed_slime_blocks").addCriterion("has_blood_slimeball", this.hasItem(Tags.Items.BLOOD_SLIMEBALL))::build).setAdvancement(new ResourceLocation("tconstruct", "common/slime/blood/congealed"), ConditionalAdvancement.builder().addCondition(this.TRUE()).addAdvancement(Advancement.Builder.builder().withParentId(new ResourceLocation("minecraft", "recipes/root")).withRewards(AdvancementRewards.Builder.recipe(new ResourceLocation("tconstruct", "common/slime/blood/congealed"))).withCriterion("has_blood_slimeball", this.hasItem(Tags.Items.BLOOD_SLIMEBALL)))).build(consumer, new ResourceLocation("tconstruct", "common/slime/blood/congealed"));
    ConditionalRecipe.builder().addCondition(this.TRUE()).addRecipe(ShapelessRecipeBuilder.shapelessRecipe(TinkerCommons.blood_slime_ball, 9).addIngredient(TinkerCommons.blood_slime).setGroup("tconstruct:slime_balls").addCriterion("has_blood_slimeball", this.hasItem(Tags.Items.BLOOD_SLIMEBALL))::build).setAdvancement(new ResourceLocation("tconstruct", "common/slime/blood/slimeball_from_block"), ConditionalAdvancement.builder().addCondition(this.TRUE()).addAdvancement(Advancement.Builder.builder().withParentId(new ResourceLocation("minecraft", "recipes/root")).withRewards(AdvancementRewards.Builder.recipe(new ResourceLocation("tconstruct", "common/slime/blood/slimeball_from_block"))).withCriterion("has_blood_slimeball", this.hasItem(Tags.Items.BLOOD_SLIMEBALL)))).build(consumer, new ResourceLocation("tconstruct", "common/slime/blood/slimeball_from_block"));
    ConditionalRecipe.builder().addCondition(this.TRUE()).addRecipe(ShapelessRecipeBuilder.shapelessRecipe(TinkerCommons.blood_slime_ball, 4).addIngredient(TinkerCommons.congealed_blood_slime).setGroup("tconstruct:slime_balls").addCriterion("has_blood_slimeball", this.hasItem(Tags.Items.BLOOD_SLIMEBALL))::build).setAdvancement(new ResourceLocation("tconstruct", "common/slime/blood/slimeball_from_congealed"), ConditionalAdvancement.builder().addCondition(this.TRUE()).addAdvancement(Advancement.Builder.builder().withParentId(new ResourceLocation("minecraft", "recipes/root")).withRewards(AdvancementRewards.Builder.recipe(new ResourceLocation("tconstruct", "common/slime/blood/slimeball_from_congealed"))).withCriterion("has_blood_slimeball", this.hasItem(Tags.Items.BLOOD_SLIMEBALL)))).build(consumer, new ResourceLocation("tconstruct", "common/slime/blood/slimeball_from_congealed"));
    ConditionalRecipe.builder().addCondition(this.TRUE()).addRecipe(ShapedRecipeBuilder.shapedRecipe(TinkerCommons.blood_slime).patternLine("###").patternLine("###").patternLine("###").key('#', Tags.Items.BLOOD_SLIMEBALL).setGroup("tconstruct:slime_blocks").addCriterion("has_blood_slimeball", this.hasItem(Tags.Items.BLOOD_SLIMEBALL))::build).setAdvancement(new ResourceLocation("tconstruct", "common/slime/blood/slimeblock"), ConditionalAdvancement.builder().addCondition(this.TRUE()).addAdvancement(Advancement.Builder.builder().withParentId(new ResourceLocation("minecraft", "recipes/root")).withRewards(AdvancementRewards.Builder.recipe(new ResourceLocation("tconstruct", "common/slime/blood/slimeblock"))).withCriterion("has_blood_slimeball", this.hasItem(Tags.Items.BLOOD_SLIMEBALL)))).build(consumer, new ResourceLocation("tconstruct", "common/slime/blood/slimeblock"));

    ConditionalRecipe.builder().addCondition(this.TRUE()).addRecipe(ShapedRecipeBuilder.shapedRecipe(TinkerCommons.congealed_blue_slime).patternLine("##").patternLine("##").key('#', Tags.Items.BLUE_SLIMEBALL).setGroup("tconstruct:congealed_slime_blocks").addCriterion("has_blue_slimeball", this.hasItem(Tags.Items.BLUE_SLIMEBALL))::build).setAdvancement(new ResourceLocation("tconstruct", "common/slime/blue/congealed"), ConditionalAdvancement.builder().addCondition(this.TRUE()).addAdvancement(Advancement.Builder.builder().withParentId(new ResourceLocation("minecraft", "recipes/root")).withRewards(AdvancementRewards.Builder.recipe(new ResourceLocation("tconstruct", "common/slime/blue/congealed"))).withCriterion("has_blue_slimeball", this.hasItem(Tags.Items.BLUE_SLIMEBALL)))).build(consumer, new ResourceLocation("tconstruct", "common/slime/blue/congealed"));
    ConditionalRecipe.builder().addCondition(this.TRUE()).addRecipe(ShapelessRecipeBuilder.shapelessRecipe(TinkerCommons.blue_slime_ball, 9).addIngredient(TinkerCommons.blue_slime).setGroup("tconstruct:slime_balls").addCriterion("has_blue_slimeball", this.hasItem(Tags.Items.BLUE_SLIMEBALL))::build).setAdvancement(new ResourceLocation("tconstruct", "common/slime/blue/slimeball_from_block"), ConditionalAdvancement.builder().addCondition(this.TRUE()).addAdvancement(Advancement.Builder.builder().withParentId(new ResourceLocation("minecraft", "recipes/root")).withRewards(AdvancementRewards.Builder.recipe(new ResourceLocation("tconstruct", "common/slime/blue/slimeball_from_block"))).withCriterion("has_blue_slimeball", this.hasItem(Tags.Items.BLUE_SLIMEBALL)))).build(consumer, new ResourceLocation("tconstruct", "common/slime/blue/slimeball_from_block"));
    ConditionalRecipe.builder().addCondition(this.TRUE()).addRecipe(ShapelessRecipeBuilder.shapelessRecipe(TinkerCommons.blue_slime_ball, 4).addIngredient(TinkerCommons.congealed_blue_slime).setGroup("tconstruct:slime_balls").addCriterion("has_blue_slimeball", this.hasItem(Tags.Items.BLUE_SLIMEBALL))::build).setAdvancement(new ResourceLocation("tconstruct", "common/slime/blue/slimeball_from_congealed"), ConditionalAdvancement.builder().addCondition(this.TRUE()).addAdvancement(Advancement.Builder.builder().withParentId(new ResourceLocation("minecraft", "recipes/root")).withRewards(AdvancementRewards.Builder.recipe(new ResourceLocation("tconstruct", "common/slime/blue/slimeball_from_congealed"))).withCriterion("has_blue_slimeball", this.hasItem(Tags.Items.BLUE_SLIMEBALL)))).build(consumer, new ResourceLocation("tconstruct", "common/slime/blue/slimeball_from_congealed"));
    ConditionalRecipe.builder().addCondition(this.TRUE()).addRecipe(ShapedRecipeBuilder.shapedRecipe(TinkerCommons.blue_slime).patternLine("###").patternLine("###").patternLine("###").key('#', Tags.Items.BLUE_SLIMEBALL).setGroup("tconstruct:slime_blocks").addCriterion("has_blue_slimeball", this.hasItem(Tags.Items.BLUE_SLIMEBALL))::build).setAdvancement(new ResourceLocation("tconstruct", "common/slime/blue/slimeblock"), ConditionalAdvancement.builder().addCondition(this.TRUE()).addAdvancement(Advancement.Builder.builder().withParentId(new ResourceLocation("minecraft", "recipes/root")).withRewards(AdvancementRewards.Builder.recipe(new ResourceLocation("tconstruct", "common/slime/blue/slimeblock"))).withCriterion("has_blue_slimeball", this.hasItem(Tags.Items.BLUE_SLIMEBALL)))).build(consumer, new ResourceLocation("tconstruct", "common/slime/blue/slimeblock"));

    ConditionalRecipe.builder().addCondition(this.TRUE()).addRecipe(ShapedRecipeBuilder.shapedRecipe(TinkerCommons.congealed_green_slime).patternLine("##").patternLine("##").key('#', Tags.Items.GREEN_SLIMEBALL).setGroup("tconstruct:congealed_slime_blocks").addCriterion("has_green_slimeball", this.hasItem(Tags.Items.GREEN_SLIMEBALL))::build).setAdvancement(new ResourceLocation("tconstruct", "common/slime/green/congealed"), ConditionalAdvancement.builder().addCondition(this.TRUE()).addAdvancement(Advancement.Builder.builder().withParentId(new ResourceLocation("minecraft", "recipes/root")).withRewards(AdvancementRewards.Builder.recipe(new ResourceLocation("tconstruct", "common/slime/green/congealed"))).withCriterion("has_green_slimeball", this.hasItem(Tags.Items.GREEN_SLIMEBALL)))).build(consumer, new ResourceLocation("tconstruct", "common/slime/green/congealed"));
    ConditionalRecipe.builder().addCondition(this.TRUE()).addRecipe(ShapelessRecipeBuilder.shapelessRecipe(Items.SLIME_BALL, 9).addIngredient(Blocks.SLIME_BLOCK).setGroup("tconstruct:slime_balls").addCriterion("has_green_slimeball", this.hasItem(Tags.Items.GREEN_SLIMEBALL))::build).setAdvancement(new ResourceLocation("tconstruct", "common/slime/green/slimeball_from_block"), ConditionalAdvancement.builder().addCondition(this.TRUE()).addAdvancement(Advancement.Builder.builder().withParentId(new ResourceLocation("minecraft", "recipes/root")).withRewards(AdvancementRewards.Builder.recipe(new ResourceLocation("tconstruct", "common/slime/green/slimeball_from_block"))).withCriterion("has_green_slimeball", this.hasItem(Tags.Items.GREEN_SLIMEBALL)))).build(consumer, new ResourceLocation("tconstruct", "common/slime/green/slimeball_from_block"));
    ConditionalRecipe.builder().addCondition(this.TRUE()).addRecipe(ShapelessRecipeBuilder.shapelessRecipe(Items.SLIME_BALL, 4).addIngredient(TinkerCommons.congealed_green_slime).setGroup("tconstruct:slime_balls").addCriterion("has_green_slimeball", this.hasItem(Tags.Items.GREEN_SLIMEBALL))::build).setAdvancement(new ResourceLocation("tconstruct", "common/slime/green/slimeball_from_congealed"), ConditionalAdvancement.builder().addCondition(this.TRUE()).addAdvancement(Advancement.Builder.builder().withParentId(new ResourceLocation("minecraft", "recipes/root")).withRewards(AdvancementRewards.Builder.recipe(new ResourceLocation("tconstruct", "common/slime/green/slimeball_from_congealed"))).withCriterion("has_green_slimeball", this.hasItem(Tags.Items.GREEN_SLIMEBALL)))).build(consumer, new ResourceLocation("tconstruct", "common/slime/green/slimeball_from_congealed"));
    ConditionalRecipe.builder().addCondition(this.TRUE()).addRecipe(ShapedRecipeBuilder.shapedRecipe(Blocks.SLIME_BLOCK).patternLine("###").patternLine("###").patternLine("###").key('#', Tags.Items.GREEN_SLIMEBALL).setGroup("tconstruct:slime_blocks").addCriterion("has_green_slimeball", this.hasItem(Tags.Items.GREEN_SLIMEBALL))::build).setAdvancement(new ResourceLocation("tconstruct", "common/slime/green/slimeblock"), ConditionalAdvancement.builder().addCondition(this.TRUE()).addAdvancement(Advancement.Builder.builder().withParentId(new ResourceLocation("minecraft", "recipes/root")).withRewards(AdvancementRewards.Builder.recipe(new ResourceLocation("tconstruct", "common/slime/green/slimeblock"))).withCriterion("has_green_slimeball", this.hasItem(Tags.Items.GREEN_SLIMEBALL)))).build(consumer, new ResourceLocation("tconstruct", "common/slime/green/slimeblock"));

    ConditionalRecipe.builder().addCondition(this.TRUE()).addRecipe(ShapedRecipeBuilder.shapedRecipe(TinkerCommons.congealed_magma_slime).patternLine("##").patternLine("##").key('#', Tags.Items.MAGMA_SLIMEBALL).setGroup("tconstruct:congealed_slime_blocks").addCriterion("has_magma_slimeball", this.hasItem(Tags.Items.MAGMA_SLIMEBALL))::build).setAdvancement(new ResourceLocation("tconstruct", "common/slime/magma/congealed"), ConditionalAdvancement.builder().addCondition(this.TRUE()).addAdvancement(Advancement.Builder.builder().withParentId(new ResourceLocation("minecraft", "recipes/root")).withRewards(AdvancementRewards.Builder.recipe(new ResourceLocation("tconstruct", "common/slime/magma/congealed"))).withCriterion("has_magma_slimeball", this.hasItem(Tags.Items.MAGMA_SLIMEBALL)))).build(consumer, new ResourceLocation("tconstruct", "common/slime/magma/congealed"));
    ConditionalRecipe.builder().addCondition(this.TRUE()).addRecipe(ShapelessRecipeBuilder.shapelessRecipe(TinkerCommons.magma_slime_ball, 9).addIngredient(TinkerCommons.magma_slime).setGroup("tconstruct:slime_balls").addCriterion("has_magma_slimeball", this.hasItem(Tags.Items.MAGMA_SLIMEBALL))::build).setAdvancement(new ResourceLocation("tconstruct", "common/slime/magma/slimeball_from_block"), ConditionalAdvancement.builder().addCondition(this.TRUE()).addAdvancement(Advancement.Builder.builder().withParentId(new ResourceLocation("minecraft", "recipes/root")).withRewards(AdvancementRewards.Builder.recipe(new ResourceLocation("tconstruct", "common/slime/magma/slimeball_from_block"))).withCriterion("has_magma_slimeball", this.hasItem(Tags.Items.MAGMA_SLIMEBALL)))).build(consumer, new ResourceLocation("tconstruct", "common/slime/magma/slimeball_from_block"));
    ConditionalRecipe.builder().addCondition(this.TRUE()).addRecipe(ShapelessRecipeBuilder.shapelessRecipe(TinkerCommons.magma_slime_ball, 4).addIngredient(TinkerCommons.congealed_magma_slime).setGroup("tconstruct:slime_balls").addCriterion("has_magma_slimeball", this.hasItem(Tags.Items.MAGMA_SLIMEBALL))::build).setAdvancement(new ResourceLocation("tconstruct", "common/slime/magma/slimeball_from_congealed"), ConditionalAdvancement.builder().addCondition(this.TRUE()).addAdvancement(Advancement.Builder.builder().withParentId(new ResourceLocation("minecraft", "recipes/root")).withRewards(AdvancementRewards.Builder.recipe(new ResourceLocation("tconstruct", "common/slime/magma/slimeball_from_congealed"))).withCriterion("has_magma_slimeball", this.hasItem(Tags.Items.MAGMA_SLIMEBALL)))).build(consumer, new ResourceLocation("tconstruct", "common/slime/magma/slimeball_from_congealed"));
    ConditionalRecipe.builder().addCondition(this.TRUE()).addRecipe(ShapedRecipeBuilder.shapedRecipe(TinkerCommons.magma_slime).patternLine("###").patternLine("###").patternLine("###").key('#', Tags.Items.MAGMA_SLIMEBALL).setGroup("tconstruct:slime_blocks").addCriterion("has_magma_slimeball", this.hasItem(Tags.Items.MAGMA_SLIMEBALL))::build).setAdvancement(new ResourceLocation("tconstruct", "common/slime/magma/slimeblock"), ConditionalAdvancement.builder().addCondition(this.TRUE()).addAdvancement(Advancement.Builder.builder().withParentId(new ResourceLocation("minecraft", "recipes/root")).withRewards(AdvancementRewards.Builder.recipe(new ResourceLocation("tconstruct", "common/slime/magma/slimeblock"))).withCriterion("has_magma_slimeball", this.hasItem(Tags.Items.MAGMA_SLIMEBALL)))).build(consumer, new ResourceLocation("tconstruct", "common/slime/magma/slimeblock"));

    //ConditionalRecipe.builder().addCondition(this.TRUE()).addRecipe(ShapedRecipeBuilder.shapedRecipe(TinkerCommons.congealed_pink_slime).patternLine("##").patternLine("##").key('#', Tags.Items.PINK_SLIMEBALL).setGroup("tconstruct:congealed_slime_blocks").addCriterion("has_pink_slimeball", this.hasItem(Tags.Items.PINK_SLIMEBALL))::build).setAdvancement(new ResourceLocation("tconstruct", "common/slime/pink/congealed"), ConditionalAdvancement.builder().addCondition(this.TRUE()).addAdvancement(Advancement.Builder.builder().withParentId(new ResourceLocation("minecraft", "recipes/root")).withRewards(AdvancementRewards.Builder.recipe(new ResourceLocation("tconstruct", "common/slime/pink/congealed"))).withCriterion("has_pink_slimeball", this.hasItem(Tags.Items.PINK_SLIMEBALL)))).build(consumer, new ResourceLocation("tconstruct", "common/slime/pink/congealed"));
    ConditionalRecipe.builder().addCondition(this.TRUE()).addRecipe(ShapelessRecipeBuilder.shapelessRecipe(TinkerCommons.pink_slime_ball, 9).addIngredient(TinkerCommons.pink_slime).setGroup("tconstruct:slime_balls").addCriterion("has_pink_slimeball", this.hasItem(TinkerCommons.pink_slime_ball))::build).setAdvancement(new ResourceLocation("tconstruct", "common/slime/pink/slimeball_from_block"), ConditionalAdvancement.builder().addCondition(this.TRUE()).addAdvancement(Advancement.Builder.builder().withParentId(new ResourceLocation("minecraft", "recipes/root")).withRewards(AdvancementRewards.Builder.recipe(new ResourceLocation("tconstruct", "common/slime/pink/slimeball_from_block"))).withCriterion("has_pink_slimeball", this.hasItem(TinkerCommons.pink_slime_ball)))).build(consumer, new ResourceLocation("tconstruct", "common/slime/pink/slimeball_from_block"));
    ConditionalRecipe.builder().addCondition(this.TRUE()).addRecipe(ShapelessRecipeBuilder.shapelessRecipe(TinkerCommons.pink_slime_ball, 4).addIngredient(TinkerCommons.congealed_pink_slime).setGroup("tconstruct:slime_balls").addCriterion("has_pink_slimeball", this.hasItem(TinkerCommons.pink_slime_ball))::build).setAdvancement(new ResourceLocation("tconstruct", "common/slime/pink/slimeball_from_congealed"), ConditionalAdvancement.builder().addCondition(this.TRUE()).addAdvancement(Advancement.Builder.builder().withParentId(new ResourceLocation("minecraft", "recipes/root")).withRewards(AdvancementRewards.Builder.recipe(new ResourceLocation("tconstruct", "common/slime/pink/slimeball_from_congealed"))).withCriterion("has_pink_slimeball", this.hasItem(TinkerCommons.pink_slime_ball)))).build(consumer, new ResourceLocation("tconstruct", "common/slime/pink/slimeball_from_congealed"));
    ConditionalRecipe.builder().addCondition(this.not(this.configOptionEnabled("matchVanillaSlimeblock"))).addRecipe(ShapedRecipeBuilder.shapedRecipe(TinkerCommons.pink_slime).patternLine("###").patternLine("###").patternLine("###").key('#', TinkerCommons.pink_slime_ball).setGroup("tconstruct:slime_blocks").addCriterion("has_pink_slimeball", this.hasItem(TinkerCommons.pink_slime_ball))::build).setAdvancement(new ResourceLocation("tconstruct", "common/slime/pink/slimeblock"), ConditionalAdvancement.builder().addCondition(this.not(this.configOptionEnabled("matchVanillaSlimeblock"))).addAdvancement(Advancement.Builder.builder().withParentId(new ResourceLocation("minecraft", "recipes/root")).withRewards(AdvancementRewards.Builder.recipe(new ResourceLocation("tconstruct", "common/slime/pink/slimeblock"))).withCriterion("has_pink_slimeball", this.hasItem(TinkerCommons.pink_slime_ball)))).build(consumer, new ResourceLocation("tconstruct", "common/slime/pink/slimeblock"));

    ConditionalRecipe.builder().addCondition(this.TRUE()).addRecipe(ShapedRecipeBuilder.shapedRecipe(TinkerCommons.congealed_purple_slime).patternLine("##").patternLine("##").key('#', Tags.Items.PURPLE_SLIMEBALL).setGroup("tconstruct:congealed_slime_blocks").addCriterion("has_purple_slimeball", this.hasItem(Tags.Items.PURPLE_SLIMEBALL))::build).setAdvancement(new ResourceLocation("tconstruct", "common/slime/purple/congealed"), ConditionalAdvancement.builder().addCondition(this.TRUE()).addAdvancement(Advancement.Builder.builder().withParentId(new ResourceLocation("minecraft", "recipes/root")).withRewards(AdvancementRewards.Builder.recipe(new ResourceLocation("tconstruct", "common/slime/purple/congealed"))).withCriterion("has_purple_slimeball", this.hasItem(Tags.Items.PURPLE_SLIMEBALL)))).build(consumer, new ResourceLocation("tconstruct", "common/slime/purple/congealed"));
    ConditionalRecipe.builder().addCondition(this.TRUE()).addRecipe(ShapelessRecipeBuilder.shapelessRecipe(TinkerCommons.purple_slime_ball, 9).addIngredient(TinkerCommons.purple_slime).setGroup("tconstruct:slime_balls").addCriterion("has_purple_slimeball", this.hasItem(Tags.Items.PURPLE_SLIMEBALL))::build).setAdvancement(new ResourceLocation("tconstruct", "common/slime/purple/slimeball_from_block"), ConditionalAdvancement.builder().addCondition(this.TRUE()).addAdvancement(Advancement.Builder.builder().withParentId(new ResourceLocation("minecraft", "recipes/root")).withRewards(AdvancementRewards.Builder.recipe(new ResourceLocation("tconstruct", "common/slime/purple/slimeball_from_block"))).withCriterion("has_purple_slimeball", this.hasItem(Tags.Items.PURPLE_SLIMEBALL)))).build(consumer, new ResourceLocation("tconstruct", "common/slime/purple/slimeball_from_block"));
    ConditionalRecipe.builder().addCondition(this.TRUE()).addRecipe(ShapelessRecipeBuilder.shapelessRecipe(TinkerCommons.purple_slime_ball, 4).addIngredient(TinkerCommons.congealed_purple_slime).setGroup("tconstruct:slime_balls").addCriterion("has_purple_slimeball", this.hasItem(Tags.Items.PURPLE_SLIMEBALL))::build).setAdvancement(new ResourceLocation("tconstruct", "common/slime/purple/slimeball_from_congealed"), ConditionalAdvancement.builder().addCondition(this.TRUE()).addAdvancement(Advancement.Builder.builder().withParentId(new ResourceLocation("minecraft", "recipes/root")).withRewards(AdvancementRewards.Builder.recipe(new ResourceLocation("tconstruct", "common/slime/purple/slimeball_from_congealed"))).withCriterion("has_purple_slimeball", this.hasItem(Tags.Items.PURPLE_SLIMEBALL)))).build(consumer, new ResourceLocation("tconstruct", "common/slime/purple/slimeball_from_congealed"));
    ConditionalRecipe.builder().addCondition(this.TRUE()).addRecipe(ShapedRecipeBuilder.shapedRecipe(TinkerCommons.purple_slime).patternLine("###").patternLine("###").patternLine("###").key('#', Tags.Items.PURPLE_SLIMEBALL).setGroup("tconstruct:slime_blocks").addCriterion("has_purple_slimeball", this.hasItem(Tags.Items.PURPLE_SLIMEBALL))::build).setAdvancement(new ResourceLocation("tconstruct", "common/slime/purple/slimeblock"), ConditionalAdvancement.builder().addCondition(this.TRUE()).addAdvancement(Advancement.Builder.builder().withParentId(new ResourceLocation("minecraft", "recipes/root")).withRewards(AdvancementRewards.Builder.recipe(new ResourceLocation("tconstruct", "common/slime/purple/slimeblock"))).withCriterion("has_purple_slimeball", this.hasItem(Tags.Items.PURPLE_SLIMEBALL)))).build(consumer, new ResourceLocation("tconstruct", "common/slime/purple/slimeblock"));

    ConditionalRecipe.builder().addCondition(this.pulseLoaded(TinkerPulseIds.TINKER_SMELTERY_PULSE_ID)).addRecipe(ShapelessRecipeBuilder.shapelessRecipe(Items.BOOK).setGroup("").addCriterion("has_book", this.hasItem(Items.BOOK))::build).setAdvancement(new ResourceLocation("tconstruct", "common/book"), ConditionalAdvancement.builder().addCondition(this.pulseLoaded(TinkerPulseIds.TINKER_TOOLS_PULSE_ID)).addAdvancement(Advancement.Builder.builder().withParentId(new ResourceLocation("minecraft", "recipes/root")).withRewards(AdvancementRewards.Builder.recipe(new ResourceLocation("tconstruct", "common/book"))).withCriterion("has_book", this.hasItem(Items.BOOK)))).build(consumer, new ResourceLocation("tconstruct", "common/book"));

    ConditionalRecipe.builder().addCondition(this.configOptionEnabled("addGravelToFlintRecipe")).addRecipe(ShapelessRecipeBuilder.shapelessRecipe(Items.FLINT).addIngredient(Blocks.GRAVEL).addIngredient(Blocks.GRAVEL).addIngredient(Blocks.GRAVEL).setGroup("").addCriterion("has_gravel", this.hasItem(Blocks.GRAVEL))::build).setAdvancement(new ResourceLocation("tconstruct", "common/flint"), ConditionalAdvancement.builder().addCondition(this.configOptionEnabled("addGravelToFlintRecipe")).addAdvancement(Advancement.Builder.builder().withParentId(new ResourceLocation("minecraft", "recipes/root")).withRewards(AdvancementRewards.Builder.recipe(new ResourceLocation("tconstruct", "common/flint"))).withCriterion("has_gravel", this.hasItem(Blocks.GRAVEL)))).build(consumer, new ResourceLocation("tconstruct", "common/flint"));

    ConditionalRecipe.builder().addCondition(this.TRUE()).addRecipe(CookingRecipeBuilder.smeltingRecipe(Ingredient.fromItems(TinkerCommons.graveyard_soil), TinkerCommons.consecrated_soil, 0.1F, 200).addCriterion("has_graveyard_soil", this.hasItem(TinkerCommons.graveyard_soil))::build).setAdvancement(new ResourceLocation("tconstruct", "common/consecrated_soil"), ConditionalAdvancement.builder().addCondition(this.TRUE()).addAdvancement(Advancement.Builder.builder().withParentId(new ResourceLocation("minecraft", "recipes/root")).withRewards(AdvancementRewards.Builder.recipe(new ResourceLocation("tconstruct", "common/consecrated_soil"))).withCriterion("has_graveyard_soil", this.hasItem(TinkerCommons.graveyard_soil)))).build(consumer, new ResourceLocation("tconstruct", "common/consecrated_soil"));
  }

  private void addWorld(Consumer<IFinishedRecipe> consumer) {

  }

  private void addGadgets(Consumer<IFinishedRecipe> consumer) {
    /*ShapedRecipeBuilder.shapedRecipe(LOADER_BLOCK, 10)
            .key('#', Items.ENDER_PEARL)
            .patternLine("# #").patternLine("###").patternLine("# #")
            .addCriterion("has_cobblestone", hasItem(Items.ENDER_PEARL))
            .build(consumer);*/
  }

  private ICondition pulseLoaded(String pulseId) {
    return new PulseLoadedCondition(pulseId);
  }

  private ICondition configOptionEnabled(String configSetting) {
    return new ConfigOptionEnabledCondition(configSetting);
  }
}
